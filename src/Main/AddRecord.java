/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

// Declare required packages
import java.io.*;
import java.math.*;
import java.util.*;
import javax.swing.*;

interface addRecordInterface {
    public void populateArrayList();
}

public class AddRecord extends javax.swing.JFrame implements addRecordInterface {
    
    // Declare arraylist named records of typed 'Record' object
    ArrayList<Record> records;
    
    /**
     * Creates new form AddRecord
     */
    public AddRecord() {
        initComponents();
        
        // Calls new arraylist record
        records = new ArrayList<Record>();
        
        // Call populateArrayList() method
        populateArrayList();
    }

    // Class for populating data into array list
    public void populateArrayList()
    {
        try
        {
              // Create a file named 'Records.dat', and reads the content inside file
              FileInputStream file2 = new FileInputStream("Records.dat");
              ObjectInputStream inputFile2 = new ObjectInputStream(file2);
              
              // Declare as false first for not reaching end of file
              boolean endOfFile = false;
              
              // Loop while its not end of file
              while (!endOfFile)
              {
                  try
                  {
                      // Add record object into file, while reading the file at the same time 
                      records.add((Record) inputFile2.readObject());  
                  }
                  catch (EOFException e)
                  {
                      // Declare endofFile = true if it reaches end of file
                      endOfFile = true; 
                  }
                  catch (Exception f)
                  {
                      // Calls an error message dialog if something goes wrong
                      JOptionPane.showMessageDialog(null, f.getMessage());  
                  }
              }
               
              // Close the file
              inputFile2.close();
        }
        catch (IOException e)
        {
             // Calls an error message dialog if something goes wrong
            JOptionPane.showMessageDialog(null, e.getMessage());  
        }
    };
    
    // Class for determining BMI index
    public static void BMIStatus(double BMI) 
    {
        if (BMI < 18.5) 
        {
            JOptionPane.showMessageDialog(null, "Successfully Saved! \n You are underweight!");
        } 
        else if (BMI > 18.5 && BMI <= 24.9) 
        {
            JOptionPane.showMessageDialog(null, "Successfully Saved!\n You are healthy!");
        } 
        else if (BMI > 24.9 && BMI <= 29.9) 
        {
            JOptionPane.showMessageDialog(null, "Successfully Saved! \n You are overweight!");
        } 
        else if (BMI > 29.9) 
        {
            JOptionPane.showMessageDialog(null, "Successfully Saved! \n You are obese!");
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date = new com.toedter.calendar.JDateChooser();
        dateCalendar = new com.toedter.calendar.JCalendar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        recordWeight = new javax.swing.JTextField();
        recordHeight = new javax.swing.JTextField();
        recordBodyTemperature = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        recordDate = new javax.swing.JTextField();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Health Record");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Insert Health Record");

        jLabel2.setText("Current Weight (kg):");

        jLabel3.setText("Current Height (m):");

        jLabel4.setText("Current Body Temperature (Celcius):");

        recordWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordWeightActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Confirm");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Date:");

        recordDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordDateActionPerformed(evt);
            }
        });

        dateChooser.setDateFormatString("dd-MM-yyyy");

        jButton2.setText("Select");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(recordDate, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(recordWeight)
                            .addComponent(recordHeight)
                            .addComponent(recordBodyTemperature)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jButton1)
                                .addGap(28, 28, 28)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recordWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recordHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recordBodyTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(recordDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(45, 45, 45))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Confirm button
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        // Check if the text fields are empty
        if (recordWeight.getText().isEmpty() || recordHeight.getText().isEmpty() || 
            recordBodyTemperature.getText().isEmpty() || recordDate.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter all fields!");
        }
        else
        {
            // Declare required variables
            // Get the data that is entered inside the text fields, and assign them into the respective variables
            double weight = Double.parseDouble(recordWeight.getText().trim());
            double height = Double.parseDouble(recordHeight.getText().trim());
            double bodyTemperature = Double.parseDouble(recordBodyTemperature.getText().trim());
            String date = recordDate.getText().trim();
            
            // Get index from size of records arraylist
            int index = records.size(); 
            
            // Calculate BMI value
            double BMI = weight / (height * height);
            BigDecimal bd = new BigDecimal(BMI).setScale(2, RoundingMode.HALF_UP);
            double BMIInput = bd.doubleValue();
            
            // Create Record object using Record Constructor
            Record record = new Record(index, date, weight, height, bodyTemperature, BMIInput);
            
            // Add record object into records arraylist
            records.add(record);
     
                try
                {
                    // Write contents into file 'Records.dat'
                    FileOutputStream file2 = new FileOutputStream("Records.dat");
                    ObjectOutputStream outputFile2 = new ObjectOutputStream(file2);

                    // Check records size, and write the record object into file
                    for (int i = 0; i < records.size(); i++)
                    {
                        outputFile2.writeObject(records.get(i));
                    }

                    // Close 'Records.dat' once writing is over
                    outputFile2.close();

                    // Calls the BMIStatus class
                    BMIStatus(BMIInput);
                }
                catch (IOException e)
                {
                    // Shows error message if an error occured
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void recordWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordWeightActionPerformed

    // Button for selecting the date
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String selectDate = ((JTextField)dateChooser.getDateEditor().getUiComponent()).getText();
        recordDate.setText(selectDate);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void recordDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recordDateActionPerformed

    // Back button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser date;
    private com.toedter.calendar.JCalendar dateCalendar;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField recordBodyTemperature;
    private javax.swing.JTextField recordDate;
    private javax.swing.JTextField recordHeight;
    private javax.swing.JTextField recordWeight;
    // End of variables declaration//GEN-END:variables
}
